using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using issue_tracker_2.Models;

namespace issue_tracker_2.Controllers
{
    public class MessageCenterController : Controller
    {
        public IActionResult MyMessages()
        {
            if (HttpContext.Session.GetInt32("UserID") != null)
            {
                
                Mymessagesinfo Mymessages = new Mymessagesinfo();


                SqlConnection sqlcon = new SqlConnection("Data Source=.;Initial Catalog='Issue Tracker 1';Integrated Security=True");
                sqlcon.Open();
                int? userid = HttpContext.Session.GetInt32("UserID");
                SqlCommand sqlcom = new SqlCommand("select * from messages where Messagereceiver=" + userid, sqlcon);
                SqlDataReader reader = sqlcom.ExecuteReader();
                if (reader.HasRows)
                {

                    int index = 0;
                    while (reader.Read())
                    {


                        Mymessages.MessagesIDs.Add(int.Parse(reader[0].ToString()));
                        Mymessages.MessagesSendersid.Add(int.Parse(reader[1].ToString()));
                        Mymessages.MessagesTitles.Add(reader[3].ToString());
                        Mymessages.MessagesInformation.Add(reader[4].ToString());
                        Mymessages.MessagesStatus.Add(reader[5].ToString());
                        Mymessages.MessagesType.Add(reader[6].ToString());

                        index++;



                    }
                    Mymessages.MyMessagesCount = index;
                    reader.Close();



                }
                sqlcon.Close();
                return View(Mymessages);
            }
            else
            {
                return RedirectToAction("PageNotFound", "Home");
            }
        }
        public IActionResult SendMessage(String ReplyTo)
        {
            if (HttpContext.Session.GetInt32("UserID") != null)
            {

                Sendmessageinfo msginfo = new Sendmessageinfo();
                int id;
                bool isint = int.TryParse(ReplyTo, out id);
                if (isint == true)
                {
                    msginfo.Receiverid = id;
                }
                return View(msginfo);
            }
            else
            {
                return RedirectToAction("PageNotFound", "Home");
            }
        }
        public IActionResult Messagelookup(int Messageid)
        {
            if (HttpContext.Session.GetInt32("UserID") != null)
            {

                Messagelookupinfo messagelookup = new Messagelookupinfo();
                SqlConnection sql = new SqlConnection();
                SqlConnection sqlcon = new SqlConnection("Data Source=.;Initial Catalog='Issue Tracker 1';Integrated Security=True");
                sqlcon.Open();
                SqlCommand sqlcom = new SqlCommand("select * from messages where messageid=" + Messageid + "and Messagereceiver=" + HttpContext.Session.GetInt32("UserID"), sqlcon);
                SqlDataReader reader = sqlcom.ExecuteReader();
                if (reader.HasRows)
                {
                    reader.Read();
                    messagelookup.Messageid = Messageid;
                    messagelookup.MessagesSendersid = int.Parse(reader[1].ToString());
                    messagelookup.MessagesTitle = reader[3].ToString();
                    messagelookup.MessagesInformation = reader[4].ToString();
                    messagelookup.MessageStatus = reader[5].ToString();
                    messagelookup.MessageType = reader[6].ToString();


                    messagelookup.MessageSentdate = reader[7].ToString();

                    reader.Close();
                    sqlcom = new SqlCommand("select username,userlastname from users where userid=" + messagelookup.MessagesSendersid, sqlcon);
                    reader = sqlcom.ExecuteReader();

                    reader.Read();
                    messagelookup.MessagesSendersName = reader[0].ToString() + " " + reader[1].ToString();
                    reader.Close();

                    if (messagelookup.MessageStatus == "NEW")
                    {
                        sqlcom = new SqlCommand("Update messages set messagestatus='READ' where messageid=" + Messageid, sqlcon);
                        sqlcom.ExecuteNonQuery();
                    }

                    sqlcon.Close();

                    return View(messagelookup);
                }
                else
                {
                    sqlcon.Close();
                    return RedirectToAction("PageNotFound", "Home");
                }
            }
            else
            {
                return RedirectToAction("PageNotFound", "Home");
            }
        }


        public IActionResult SendaMessage(Sendmessageinfo Messageinformation)
        {

            SqlConnection sqlcon = new SqlConnection("Data Source=.;Initial Catalog='Issue Tracker 1';Integrated Security=True");
            SqlCommand sqlcom = new SqlCommand();
            try
            {
                sqlcon.Open();
                sqlcom = new SqlCommand("select * from users where userid=" + Messageinformation.Receiverid, sqlcon);
                SqlDataReader reader = sqlcom.ExecuteReader();
                if (reader.HasRows)
                {
                    sqlcon.Close();
                    sqlcon.Open();
                    sqlcom = new SqlCommand("insert into messages(messagesender,Messagereceiver,messagetitle,messageinfo,messagestatus,MessageSentdate,messagetype) values(" + HttpContext.Session.GetInt32("UserID") + "," + Messageinformation.Receiverid + ",'" + Messageinformation.Messagetitle + "','" + Messageinformation.Messageinfo + "','NEW','"+GetDate()+"','"+Messageinformation.MessageType+"')", sqlcon);
                    sqlcom.ExecuteNonQuery();
                    TempData["MessageStatus"] = "Sent";
                    return RedirectToAction("SendMessage", "MessageCenter");
                }
                else
                {
                    TempData["MessageStatus"] = "ReceiverNotFound";
                    return RedirectToAction("SendMessage", "MessageCenter");
                }

            }
            catch
            {
                TempData["MessageStatus"] = "Error";
                return RedirectToAction("SendMessage", "MessageCenter");


            }
            finally
            {
                sqlcon.Close();
            }

        }
        public static string GetDate()
        {
            string monthName = "";
            if (DateTime.Now.Month == 1)
            {
                monthName = "Jan";
            }
            if (DateTime.Now.Month == 2)
            {
                monthName = "Feb";
            }
            if (DateTime.Now.Month == 3)
            {
                monthName = "Mar";
            }
            if (DateTime.Now.Month == 4)
            {
                monthName = "Apr";
            }
            if (DateTime.Now.Month == 5)
            {
                monthName = "May";
            }
            if (DateTime.Now.Month == 6)
            {
                monthName = "Jun";
            }
            if (DateTime.Now.Month == 7)
            {
                monthName = "Jul";
            }
            if (DateTime.Now.Month == 8)
            {
                monthName = "Aug";
            }
            if (DateTime.Now.Month == 9)
            {
                monthName = "Sep";
            }
            if (DateTime.Now.Month == 10)
            {
                monthName = "Oct";
            }
            if (DateTime.Now.Month == 11)
            {
                monthName = "Nov";
            }
            if (DateTime.Now.Month == 12)
            {
                monthName = "Dec";
            }
            return monthName + " " + DateTime.Now.Day + " " + DateTime.Now.Year;
        }

        public IActionResult Unmarkmessage(int messageid)
        {


            SqlConnection sql = new SqlConnection();
            SqlConnection sqlcon = new SqlConnection("Data Source=.;Initial Catalog='Issue Tracker 1';Integrated Security=True");
            sqlcon.Open();
            SqlCommand sqlcom = new SqlCommand("update messages set messagestatus='READ' where messageid=" + messageid, sqlcon);
            sqlcom.ExecuteNonQuery();
            sqlcon.Close();
            return RedirectToAction("Messagelookup", new { Messageid = messageid });
        }
        public IActionResult Markmessage(int messageid)
        {

            
            SqlConnection sql = new SqlConnection();
            SqlConnection sqlcon = new SqlConnection("Data Source=.;Initial Catalog='Issue Tracker 1';Integrated Security=True");
            sqlcon.Open();
            SqlCommand sqlcom = new SqlCommand("update messages set messagestatus='MARKED' where messageid=" + messageid, sqlcon);
            sqlcom.ExecuteNonQuery();
            sqlcon.Close();
            return RedirectToAction("Messagelookup", new { Messageid = messageid });
        }
        public IActionResult DeleteMessage(int messageid)
        {


            SqlConnection sql = new SqlConnection();
            SqlConnection sqlcon = new SqlConnection("Data Source=.;Initial Catalog='Issue Tracker 1';Integrated Security=True");
            sqlcon.Open();
            SqlCommand sqlcom = new SqlCommand("delete from messages where messageid="+messageid, sqlcon);
            sqlcom.ExecuteNonQuery();
            sqlcon.Close();
            TempData["MessageDeleted"] = "True";
            return RedirectToAction("MyMessages","MessageCenter");
        }


    }

}
